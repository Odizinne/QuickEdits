name: Build
on:
  push:
  pull_request:
    branches:
      - main
env:
  QT_VERSION: '6.9.1'
jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: 'linux'
          cache: true
          add-tools-to-path: true
          modules: 'qtimageformats'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev libwayland-dev 

      - name: Generate and Build with CMake
        shell: pwsh
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release
          cmake --install . --config Release
          ls
          ls install
          
      - name: Replace symlinks with real files
        shell: bash
        run: |
          echo "Replacing symlinks with real files..."
          cd build/install/lib
          for f in $(find . -type l); do
            target=$(readlink -f "$f")
            if [ -f "$target" ]; then
              echo "Replacing symlink $f -> $target"
              # Get the filename only
              target_name=$(basename "$target")
              # Remove the symlink
              rm "$f"
              # Copy the real file to the symlink name
              cp "$target" "$f"
              # Remove the original file if it's not the same as the new file
              if [ "$target" != "$(pwd)/$f" ]; then
                rm "$target"
              fi
            fi
          done

      - name: Cleanup Libraries and Plugins
        shell: bash
        run: |
          # Cleanup plugins
          echo "Cleaning up unnecessary plugin folders..."
          cd build/install/plugins
          if [ -d "." ]; then
            echo "Removing specified plugin folders..."
            rm -rf iconengines networkinformation qmltooling tls
          else
            echo "Plugins directory not found, skipping plugin cleanup"
          fi
      
      - name: Zip binaries folder
        shell: bash
        run: |
          zip -r "QuickEdits_linux64_gcc.zip" "build/install"
      
      - name: Upload Zip Artifact
        uses: actions/upload-artifact@v4
        with:
          name: QuickEdits_linux64_gcc
          path: QuickEdits_linux64_gcc.zip